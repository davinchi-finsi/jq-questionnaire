include ../dist/_jqQuiz
doctype html
html(lang='en')
    head
        title Simple use
        script(src="../node_modules/jquery/dist/jquery.js")
        script(src="../node_modules/jquery-ui-dist/jquery-ui.js")
        script(src="../node_modules/prismjs/prism.js")
        script(src="../node_modules/prismjs/components/prism-jade.js")
        script(src="../node_modules/prismjs/components/prism-typescript.js")
        script(src="../node_modules/prismjs/components/prism-json.js")
        script(src="../dist/jquery.quiz.js")
        link(rel="stylesheet" href="main.css")
        link(rel="stylesheet" href="markdown.css")
        link(rel="stylesheet" href="prism-github.css")
    body
        div.markdown-wrapper
            :markdown-it(linkify)
                ## jqQuiz
                ### Pug (Jade)
                Pug is a template engine for Node.js and browsers that makes the markup creation easy.\
                For more info please go [here](https://github.com/pugjs/pug)
                ### What is a 'mixin'?
                In Pug, a mixin is like a function that could recieve params and returns a result.\
                For example:
                ```jade
                //- Declare the mixin
                mixin list(items)
                    ul
                        //- For each item
                        each item in items
                            //- Create a li and asigns the content
                            li!= item
                //- Invoke the mixin with parameters (note the + before the name of the mixin)
                +list(["Hello", "my", "friend"])
                ```
                results in:
                ```html
                <ul>
                    <li>Hello</li>
                    <li>my</li>
                    <li>friend</li>
                </ul>
                ```
                Cool, right?, with mixins is possible to reuse a lot of code.\
                For more info about the mixins please go [here](https://codepen.io/pixelass/post/let-us-jade-4-mixins-on-steroids)
                ### The Mixins way
                The mixins gives more control over the HTML than the JSON, for example is possible to add more markup to use a grid system like flexbox grid or bootstrap grid.\
                All the mixins has common and specific params.\
                The common params are:
                ```jade
                type            : The HTML tag to render. Depending of the mixin the default type is different, for example, for the jq-quiz__header the default tag is "header".
                cssClass        : Css classes to add
                attributes      : HTML attributes to add, all the attributes are allowed
                id              : An id
                ```
                An example:
                ```jade
                +jq-quiz({
                    id:"myQuiz",
                    cssClass:"my-quiz-class another-quiz-class",
                    type:"section",
                    attributes:{
                        "data-id":"someId",
                        "data-some-attribute":"someAttributeValue"
                    }
                })
                ```
                results in:
                ```html
                <section class="jq-quiz my-quiz-class another-quiz-class" id="myQuiz" data-id="someId" data-some-attribute="someAttributeValue">

                </section>
                ```
                ### Available mixins
                Each section in the structure of jqQuiz has a mixin, please see [structure & roles](./structure.html)\
                The available mixins are:
                jq-quiz             : The scope mixin. Creates the structure for the quiz
                jq-quiz__header     : The header of the quiz. Visible when the quiz is not runing
                jq-quiz__title      : The title for the quiz
                ```
                ```

                #### Full mixins way
                ```jade
                include jqQuiz/_jqQuiz
                +jq-quiz
                    +jq-quiz__header
                        +jq-quiz__title({
                            content:"My quiz"
                        })
                        +jq-quiz__description({
                            content:"Description for my quiz"
                        })
                        +jq-quiz__actions
                            +jq-quiz__action({
                                type:"start",
                                content:"Start quiz"
                            })
                    +jq-quiz__body
                        +jq-quiz__questions
                            +jq-quiz__question
                                +jq-quiz__statement
                                    span Some question
                                +jq-quiz__options
                                    +jq-quiz__option({
                                        name:"question1",
                                        content:"Incorrect",
                                        isCorrect:false
                                    })
                                    +jq-quiz__option({
                                        name:"question1",
                                        content:"Correct",
                                        isCorrect:true
                                    })
                        +jq-quiz__feedback({
                            type:"success",
                            content:"Success feedback
                        })
                        +jq-quiz__actions
                            +jq-quiz__action({
                                type:"end",
                                content:"End quiz"
                            })
                //- The container

                ```
        +jq-quiz({
            id: "myQuiz",
            cssClass: "my-quiz-class",
            type: "section",
            attributes: {
                "data-id": "someId",
                "data-some-attribute": "someAttributeValue"
            }
        })


        script.
            $(".jq-quiz")
                .jqQuiz(
                    {
                        immediateFeedback: true,
                        disableOptionAfterSelect: false
                    }
                );